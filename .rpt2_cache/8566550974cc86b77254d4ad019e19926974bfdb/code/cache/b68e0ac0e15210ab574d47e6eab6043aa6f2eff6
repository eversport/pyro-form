{"code":"import * as tslib_1 from \"tslib\";\r\nimport React from 'react';\r\nimport { getValueFromEvent, isEvent } from './helper';\r\nimport { PyroProvider } from './PyroContext';\r\nvar isPromise = function (value) { return Boolean(value) && typeof value.then === 'function'; };\r\nvar PyroForm = /** @class */ (function (_super) {\r\n    tslib_1.__extends(PyroForm, _super);\r\n    function PyroForm() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.state = {\r\n            values: _this.props.initialValues,\r\n            touched: Object.keys(_this.props.initialValues).reduce(function (previousValue, currentValue) {\r\n                var _a;\r\n                return (tslib_1.__assign({}, previousValue, (_a = {}, _a[currentValue] = false, _a)));\r\n            }, {}),\r\n            errors: {},\r\n            isSubmitting: false,\r\n            submitCount: 0,\r\n        };\r\n        _this.getPyroFormActions = function () { return ({}); };\r\n        _this.handleSubmit = function (e) { return tslib_1.__awaiter(_this, void 0, void 0, function () {\r\n            var onSubmit, result;\r\n            return tslib_1.__generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (e) {\r\n                            e.preventDefault();\r\n                        }\r\n                        onSubmit = this.props.onSubmit;\r\n                        if (!onSubmit) return [3 /*break*/, 2];\r\n                        result = onSubmit(this.state.values, this.getPyroFormActions);\r\n                        if (!isPromise(result)) return [3 /*break*/, 2];\r\n                        this.setState({\r\n                            isSubmitting: true,\r\n                        });\r\n                        return [4 /*yield*/, result];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        this.setState(function (state) { return ({\r\n                            isSubmitting: false,\r\n                            submitCount: state.submitCount + 1,\r\n                        }); });\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        }); };\r\n        _this.handleChange = function (name, value) {\r\n            // Check if passed value is an event and use it's value\r\n            if (isEvent(value)) {\r\n                value = getValueFromEvent(value);\r\n            }\r\n            _this.setState(function (state) {\r\n                var _a;\r\n                return ({\r\n                    values: tslib_1.__assign({}, state.values, (_a = {}, _a[name] = value, _a)),\r\n                });\r\n            }, function () {\r\n                _this.handleValidate();\r\n                if (_this.props.onChange) {\r\n                    _this.props.onChange(_this.state.values, _this.getPyroFormActions());\r\n                }\r\n            });\r\n        };\r\n        _this.handleBlur = function (name) {\r\n            _this.setTouched(name);\r\n        };\r\n        // @ts-ignore Since the usage of name and value below is also ignored this will throw an unused parameter error\r\n        _this.setTouched = function (name) {\r\n            _this.setState(function (state) {\r\n                var _a;\r\n                return ({\r\n                    touched: tslib_1.__assign({}, state.touched, (_a = {}, _a[name] = true, _a)),\r\n                });\r\n            });\r\n        };\r\n        _this.isValid = function () {\r\n            return Object.keys(_this.state.errors).length === 0;\r\n        };\r\n        _this.handleValidate = function () {\r\n            var _a = _this.props, onValidate = _a.onValidate, onValid = _a.onValid, onInvalid = _a.onInvalid;\r\n            if (!onValidate)\r\n                return;\r\n            _this.setState(function (state) { return ({\r\n                errors: onValidate(state.values, _this.getPyroFormActions()),\r\n            }); }, function () {\r\n                if (_this.isValid()) {\r\n                    onValid && onValid();\r\n                }\r\n                else {\r\n                    onInvalid && onInvalid();\r\n                }\r\n            });\r\n        };\r\n        return _this;\r\n    }\r\n    PyroForm.prototype.componentDidMount = function () {\r\n        this.handleValidate();\r\n    };\r\n    PyroForm.prototype.render = function () {\r\n        // TODO: Add some error handling here if no children are passed\r\n        var contextValue = {\r\n            values: this.state.values,\r\n            errors: this.state.errors,\r\n            touched: this.state.touched,\r\n            handleChange: this.handleChange,\r\n            handleBlur: this.handleBlur,\r\n        };\r\n        return (React.createElement(PyroProvider, { value: contextValue }, this.props.children({\r\n            handleSubmit: this.handleSubmit,\r\n            values: this.state.values,\r\n            errors: this.state.errors,\r\n            hasErrors: !this.isValid(),\r\n        })));\r\n    };\r\n    return PyroForm;\r\n}(React.PureComponent));\r\nexport default PyroForm;\r\n//# sourceMappingURL=PyroForm.js.map","map":"{\"version\":3,\"file\":\"PyroForm.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/PyroForm.tsx\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"C:/Users/lukas/Desktop/pyro-form/PyroForm.d.ts","text":"import React from 'react';\r\nimport { PyroFormErrors, PyroFormTouched, PyroFormValues } from './typings';\r\ninterface PyroFormActions {\r\n}\r\ninterface RenderProps<Values> {\r\n    handleSubmit: () => void;\r\n    values: Values;\r\n    hasErrors: boolean;\r\n    errors: PyroFormErrors<Values>;\r\n}\r\ninterface PyroFormProps<Values extends PyroFormValues> {\r\n    initialValues: Values;\r\n    children: (renderProps: RenderProps<Values>) => React.ReactNode;\r\n    onSubmit?: (values: Values, actions: PyroFormActions) => void | Promise<void>;\r\n    onChange?: (values: Values, actions: PyroFormActions) => void | Promise<void>;\r\n    onValidate?: (values: Values, actions: PyroFormActions) => PyroFormErrors<Values>;\r\n    onValid?: () => void;\r\n    onInvalid?: () => void;\r\n}\r\ninterface PyroFormState<Values> {\r\n    values: Values;\r\n    errors: PyroFormErrors<Values>;\r\n    touched: PyroFormTouched<Values>;\r\n    isSubmitting: boolean;\r\n    submitCount: number;\r\n}\r\ndeclare class PyroForm<Values extends {\r\n    [key: string]: any;\r\n}> extends React.PureComponent<PyroFormProps<Values>, PyroFormState<Values>> {\r\n    state: {\r\n        values: Values;\r\n        touched: PyroFormTouched<Values>;\r\n        errors: {};\r\n        isSubmitting: boolean;\r\n        submitCount: number;\r\n    };\r\n    componentDidMount(): void;\r\n    render(): JSX.Element;\r\n    private getPyroFormActions;\r\n    private handleSubmit;\r\n    private handleChange;\r\n    private handleBlur;\r\n    private setTouched;\r\n    private isValid;\r\n    private handleValidate;\r\n}\r\nexport default PyroForm;\r\n"}}
